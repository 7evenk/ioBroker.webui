export declare class w3color {
    red: number;
    green: number;
    blue: number;
    hue: number;
    sat: number;
    lightness: number;
    whiteness: number;
    blackness: number;
    cyan: number;
    magenta: number;
    yellow: number;
    black: number;
    ncol: string;
    opacity: number;
    valid: boolean;
    toRgbString(): string;
    toRgbaString(): string;
    toHwbString(): string;
    toHwbStringDecimal(): string;
    toHwbaString(): string;
    toHslString(): string;
    toHslStringDecimal(): string;
    toHslaString(): string;
    toCmykString(): string;
    toCmykStringDecimal(): string;
    toNcolString(): string;
    toNcolStringDecimal(): string;
    toNcolaString(): string;
    toName(): string;
    toHexString(): string;
    toNameOrHexString(): string;
    toRgb(): {
        r: number;
        g: number;
        b: number;
        a: number;
    };
    toHsl(): {
        h: number;
        s: number;
        l: number;
        a: number;
    };
    toHwb(): {
        h: number;
        w: number;
        b: number;
        a: number;
    };
    toCmyk(): {
        c: number;
        m: number;
        y: number;
        k: number;
        a: number;
    };
    toNcol(): {
        ncol: string;
        w: number;
        b: number;
        a: number;
    };
    isDark(n: any): boolean;
    saturate(n: any): void;
    desaturate(n: any): void;
    lighter(n: any): void;
    darker(n: any): void;
    attachValues(color: any): void;
    static toColorObject(c: any): w3color;
    static colorObject(rgb: any, a: any, h: any, s: any): any;
    static getColorArr(x: any): string[];
    static roundDecimals(c: any): any;
    static hslToRgb(hue: any, sat: any, light: any): {
        r: any;
        g: any;
        b: any;
    };
    static hueToRgb(t1: any, t2: any, hue: any): any;
    static hwbToRgb(hue: any, white: any, black: any): {
        r: any;
        g: any;
        b: any;
    };
    static cmykToRgb(c: any, m: any, y: any, k: any): {
        r: any;
        g: any;
        b: any;
    };
    static ncolToRgb(ncol: any, white: any, black: any): false | {
        r: any;
        g: any;
        b: any;
    };
    static hueToNcol(hue: any): string;
    static ncsToRgb(ncs: any): {
        r: number;
        b: number;
        g: number;
    };
    static rgbToHsl(r: any, g: any, b: any): {
        h: any;
        s: any;
        l: any;
    };
    static rgbToHwb(r: any, g: any, b: any): {
        h: any;
        w: any;
        b: any;
    };
    static rgbToCmyk(r: any, g: any, b: any): {
        c: any;
        m: any;
        y: any;
        k: any;
    };
    static toHex(n: any): any;
    static w3trim(x: any): any;
    static isHex(x: any): boolean;
}
