import { IDesignItem } from "../../../item/IDesignItem";
import { IDesignerCanvas } from "../IDesignerCanvas";
import { AbstractExtension } from "./AbstractExtension";
import "../../../helper/PathDataPolyfill";
import { IExtensionManager } from "./IExtensionManger";
import { PathData } from "../../../helper/PathDataPolyfill";
export declare class PathExtension extends AbstractExtension {
    private _lastPos;
    private _parentRect;
    private _startPos;
    private _circlePos;
    private _originalPathPoint;
    private _pathdata;
    constructor(extensionManager: IExtensionManager, designerView: IDesignerCanvas, extendedItem: IDesignItem);
    extend(): void;
    pointerEvent(event: PointerEvent, circle: SVGCircleElement, p: PathData, index: number): void;
    _drawPath(path: PathData[], index: number): void;
    _drawPathCircle(x: number, y: number, p: PathData, index: number): void;
    _drawPathLine(x1: number, y1: number, x2: number, y2: number): void;
    refresh(): void;
    dispose(): void;
}
