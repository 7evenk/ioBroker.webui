import { IDesignItem } from "../../../item/IDesignItem";
import { IDesignerCanvas } from "../IDesignerCanvas";
import { ExtensionType } from './ExtensionType';
import { IExtensionManager } from "./IExtensionManger";
export declare class ExtensionManager implements IExtensionManager {
    designerView: IDesignerCanvas;
    constructor(designerView: IDesignerCanvas);
    private _selectedElementsChanged;
    applyExtension(designItem: IDesignItem, extensionType: ExtensionType): void;
    applyExtensions(designItems: IDesignItem[], extensionType: ExtensionType): void;
    removeExtension(designItem: IDesignItem, extensionType?: ExtensionType): void;
    removeExtensions(designItems: IDesignItem[], extensionType?: ExtensionType): void;
    refreshExtension(designItem: IDesignItem, extensionType?: ExtensionType): void;
    refreshExtensions(designItems: IDesignItem[], extensionType?: ExtensionType): void;
    refreshAllExtensions(designItems: IDesignItem[]): void;
}
