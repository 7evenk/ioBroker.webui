import { BaseCustomWebComponentConstructorAppend } from '@node-projects/base-custom-webcomponent';
import { ITreeView } from './ITreeView';
import { IDesignItem } from '../../item/IDesignItem';
import { ISelectionChangedEvent } from '../../services/selectionService/ISelectionChangedEvent';
import { InstanceServiceContainer } from '../../services/InstanceServiceContainer.js';
import { ContextMenuHelper } from '../../helper/contextMenu/ContextMenuHelper.js';
export declare class TreeViewExtended extends BaseCustomWebComponentConstructorAppend implements ITreeView {
    private _treeDiv;
    private _tree;
    private _filter;
    private _instanceServiceContainer;
    private _selectionChangedHandler;
    private _contentChangedHandler;
    static readonly style: CSSStyleSheet;
    static readonly template: HTMLTemplateElement;
    constructor();
    _showHideAtDesignTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    _switchHideAtDesignTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    _showLockAtDesignTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    _switchLockAtDesignTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    _showHideAtRunTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    _switchHideAtRunTimeState(img: HTMLImageElement, designItem: IDesignItem): void;
    showDesignItemContextMenu(designItem: IDesignItem, event: MouseEvent): ContextMenuHelper;
    ready(): Promise<void>;
    createTree(rootItem: IDesignItem): void;
    set instanceServiceContainer(value: InstanceServiceContainer);
    selectionChanged(event: ISelectionChangedEvent): void;
    private _recomputeTree;
    private _getChildren;
    private _highlight;
}
