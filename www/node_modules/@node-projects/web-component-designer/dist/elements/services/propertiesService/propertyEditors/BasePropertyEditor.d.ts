import { IPropertyEditorT } from "../IPropertyEditor";
import { IDesignItem } from "../../../..";
import { IProperty } from "../IProperty";
import { ValueType } from '../ValueType';
export declare abstract class BasePropertyEditor<T extends HTMLElement> implements IPropertyEditorT<T> {
    element: T;
    property: IProperty;
    designItems: IDesignItem[];
    protected disableChangeNotification: boolean;
    constructor(property: IProperty);
    protected _valueChanged(newValue: any): void;
    designItemsChanged(designItems: IDesignItem[]): void;
    abstract refreshValue(valueType: ValueType, value: any): any;
    refreshValueWithoutNotification(valueType: ValueType, value: any): void;
}
