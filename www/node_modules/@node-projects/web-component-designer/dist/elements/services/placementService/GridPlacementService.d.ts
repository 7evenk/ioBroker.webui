import type { IPoint } from '../../../interfaces/IPoint.js';
import type { IPlacementService } from './IPlacementService.js';
import type { IDesignItem } from '../../item/IDesignItem.js';
import { IPlacementView } from '../../widgets/designerView/IPlacementView.js';
export declare class GridPlacementService implements IPlacementService {
    enterContainer(container: IDesignItem, items: IDesignItem[]): void;
    leaveContainer(container: IDesignItem, items: IDesignItem[]): void;
    serviceForContainer(container: IDesignItem, containerStyle: CSSStyleDeclaration): boolean;
    canEnter(container: IDesignItem, items: IDesignItem[]): boolean;
    canLeave(container: IDesignItem, items: IDesignItem[]): boolean;
    getElementOffset(container: IDesignItem, designItem?: IDesignItem): IPoint;
    placePoint(event: MouseEvent, placementView: IPlacementView, container: IDesignItem, startPoint: IPoint, offsetInControl: IPoint, newPoint: IPoint, items: IDesignItem[]): IPoint;
    place(event: MouseEvent, placementView: IPlacementView, container: IDesignItem, startPoint: IPoint, offsetInControl: IPoint, newPoint: IPoint, items: IDesignItem[]): void;
    finishPlace(event: MouseEvent, placementView: IPlacementView, container: IDesignItem, startPoint: IPoint, offsetInControl: IPoint, newPoint: IPoint, items: IDesignItem[]): void;
}
