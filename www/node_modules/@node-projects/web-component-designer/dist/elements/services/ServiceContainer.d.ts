import { IPropertiesService } from "./propertiesService/IPropertiesService";
import { IPlacementService } from './placementService/IPlacementService';
import { IElementsService } from './elementsService/IElementsService';
import { IInstanceService } from './instanceService/IInstanceService';
import { IEditorTypesService } from './propertiesService/IEditorTypesService';
import { BaseServiceContainer } from './BaseServiceContainer';
import { IHtmlWriterService } from './htmlWriterService/IHtmlWriterService';
import { ICodeView } from "../widgets/codeView/ICodeView";
import { IHtmlParserService } from "./htmlParserService/IHtmlParserService";
import { IIntializationService } from "./initializationService/IIntializationService";
import { IDemoView } from '../widgets/demoView/IDemoView';
import { ITool } from "../widgets/designerView/tools/ITool";
import { ExtensionType } from "../widgets/designerView/extensions/ExtensionType";
import { IDesignerExtensionProvider } from "../widgets/designerView/extensions/IDesignerExtensionProvider";
import { NamedTools } from "../widgets/designerView/tools/NamedTools";
import { IContextMenuExtension } from "../widgets/designerView/extensions/contextMenu/IContextMenuExtension";
import { GlobalContext } from './GlobalContext';
import { IBindingService } from "./bindingsService/IBindingService";
import { IElementAtPointService } from './elementAtPointService/IElementAtPointService';
import { ISnaplinesProviderService } from "./placementService/ISnaplinesProviderService.js";
import { IPrepareElementsForDesignerService } from './instanceService/IPrepareElementsForDesignerService';
import { IDragDropService } from './dragDropService/IDragDropService';
import { ICopyPasteService } from "./copyPasteService/ICopyPasteService.js";
import { IDesignerPointerExtensionProvider } from "../widgets/designerView/extensions/pointerExtensions/IDesignerPointerExtensionProvider.js";
import { IModelCommandService } from "./modelCommandService/IModelCommandService.js";
import { IDesignViewConfigButtonsProvider } from "../widgets/designerView/IDesignViewConfigButtonsProvider.js";
import { IDemoProviderService } from "./demoProviderService/IDemoProviderService.js";
import { IBindableObjectsService } from "./bindableObjectsService/IBindableObjectsService.js";
import { IBindableObjectDragDropService } from "./bindableObjectsService/IBindableObjectDragDropService.js";
interface ServiceNameMap {
    "propertyService": IPropertiesService;
    "containerService": IPlacementService;
    "snaplinesProviderService": ISnaplinesProviderService;
    "elementsService": IElementsService;
    "instanceService": IInstanceService;
    "editorTypesService": IEditorTypesService;
    "htmlWriterService": IHtmlWriterService;
    "htmlParserService": IHtmlParserService;
    "intializationService": IIntializationService;
    "bindingService": IBindingService;
    "bindableObjectsService": IBindableObjectsService;
    "bindableObjectDragDropService": IBindableObjectDragDropService;
    "elementAtPointService": IElementAtPointService;
    "prepareElementsForDesignerService": IPrepareElementsForDesignerService;
    "dragDropService": IDragDropService;
    "copyPasteService": ICopyPasteService;
    "modelCommandService": IModelCommandService;
    "demoProviderService": IDemoProviderService;
}
export declare class ServiceContainer extends BaseServiceContainer<ServiceNameMap> {
    readonly config: {
        codeViewWidget: new (...args: any[]) => ICodeView & HTMLElement;
        demoViewWidget: new (...args: any[]) => IDemoView & HTMLElement;
    };
    readonly designerExtensions: Map<(ExtensionType | string), IDesignerExtensionProvider[]>;
    readonly designViewConfigButtons: IDesignViewConfigButtonsProvider[];
    readonly designerPointerExtensions: IDesignerPointerExtensionProvider[];
    designerContextMenuExtensions: IContextMenuExtension[];
    readonly globalContext: GlobalContext;
    readonly designerTools: Map<string | NamedTools, ITool>;
    get bindingService(): IBindingService;
    get bindableObjectsServices(): IBindableObjectsService[];
    get bindableObjectDragDropService(): IBindableObjectDragDropService;
    get propertiesServices(): IPropertiesService[];
    get containerServices(): IPlacementService[];
    get snaplinesProviderService(): ISnaplinesProviderService;
    get elementsServices(): IElementsService[];
    get instanceServices(): IInstanceService[];
    get editorTypesServices(): IEditorTypesService[];
    get htmlWriterServices(): IHtmlWriterService[];
    get htmlParserService(): IHtmlParserService;
    get intializationService(): IIntializationService;
    get elementAtPointService(): IElementAtPointService;
    get prepareElementsForDesignerService(): IPrepareElementsForDesignerService;
    get dragDropService(): IDragDropService;
    get copyPasteService(): ICopyPasteService;
    get modelCommandService(): IModelCommandService;
    get demoProviderService(): IDemoProviderService;
}
export {};
