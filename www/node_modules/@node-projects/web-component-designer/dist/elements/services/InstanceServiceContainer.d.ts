import { ISelectionService } from './selectionService/ISelectionService';
import { IUndoService } from './undoService/IUndoService';
import { BaseServiceContainer } from './BaseServiceContainer';
import { IContentService } from './contentService/IContentService';
import { IDesignContext } from '../widgets/designerView/IDesignContext';
import { IDesignerCanvas } from '../widgets/designerView/IDesignerCanvas.js';
interface InstanceServiceNameMap {
    "undoService": IUndoService;
    "selectionService": ISelectionService;
    "contentService": IContentService;
}
export declare class InstanceServiceContainer extends BaseServiceContainer<InstanceServiceNameMap> {
    designContext: IDesignContext;
    readonly designerCanvas: IDesignerCanvas;
    constructor(designerCanvas: IDesignerCanvas);
    get undoService(): IUndoService;
    get selectionService(): ISelectionService;
    get contentService(): IContentService;
}
export {};
